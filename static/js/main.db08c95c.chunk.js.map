{"version":3,"sources":["Post.js","PostInput.js","App.js","index.js"],"names":["Post","title","body","author","className","PostInput","useState","post","setPost","placeholder","onChange","e","target","value","type","onClick","firebase","firestore","collection","add","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","posts","setPosts","useEffect","get","then","querySnapshot","docs","map","doc","data","onSnapshot","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIe,SAASA,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC1C,OACE,mCACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wCACA,4BAAIH,OAEN,gCACE,qCACA,4BAAIE,OAEN,qBAAKC,UAAU,UAAf,SACE,4BAAIF,W,WCdC,SAASG,IAAa,IAAD,EACVC,mBAAS,CAC/BL,MAAO,GACPC,KAAM,GACNC,OAAQ,KAJwB,mBAC3BI,EAD2B,KACrBC,EADqB,KAWlC,OACE,qCACE,8BACE,uBAAOC,YAAY,QAAQC,SAAU,SAACC,GAAD,OAAOH,EAAQ,2BAAKD,GAAN,IAAYN,MAAOU,EAAEC,OAAOC,cAEjF,8BACE,uBAAOJ,YAAY,SAASC,SAAU,SAACC,GAAD,OAAOH,EAAQ,2BAAKD,GAAN,IAAYJ,OAAQQ,EAAEC,OAAOC,cAEnF,8BACE,0BAAUJ,YAAY,UAAUC,SAAU,SAACC,GAAD,OAAOH,EAAQ,2BAAKD,GAAN,IAAYL,KAAMS,EAAEC,OAAOC,cAErF,8BACE,wBAAQC,KAAK,SAASC,QAAS,WAfnCC,IAASC,YAAYC,WAAW,SAASC,IAAIZ,IAezC,yB,MCTRS,IAASI,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,gCACfK,kBAAmBL,eACnBM,MAAON,8CAoCMO,MA/Bf,WAAgB,IAAD,EACavB,mBAAS,IADtB,mBACNwB,EADM,KACCC,EADD,KAab,OAVAC,qBAAU,WACRhB,IAASC,YAAYC,WAAW,SAASe,MAAMC,MAAK,SAACC,GACnDJ,EAASI,EAAcC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,cAG/CvB,IAASC,YAAYC,WAAW,SAASsB,YAAW,SAACL,GACnDJ,EAASI,EAAcC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAE9C,IAGD,qCACE,qBAAKnC,UAAU,YAAf,SACG0B,EAAMO,KAAI,SAAC9B,GAAD,OACT,cAAC,EAAD,CACEN,MAAOM,EAAKN,MACZC,KAAMK,EAAKL,KACXC,OAAQI,EAAKJ,cAInB,qBAAKC,UAAU,aAAf,SACE,cAACC,EAAD,UCvCRoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db08c95c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Post.css';\r\n\r\nexport default function Post({ title, body, author }) {\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        <div className=\"post-comp\">\r\n          <p>Title: </p>\r\n          <p>{title}</p>\r\n        </div>\r\n        <div>\r\n          <p>By: </p>\r\n          <p>{author}</p>\r\n        </div>\r\n        <div className=\"message\">\r\n          <p>{body}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  body: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nexport default function PostInput() {\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    body: '',\r\n    author: '',\r\n  });\r\n\r\n  function addToFirebase() {\r\n    firebase.firestore().collection('posts').add(post);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input placeholder=\"Title\" onChange={(e) => setPost({ ...post, title: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <input placeholder=\"Author\" onChange={(e) => setPost({ ...post, author: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <textarea placeholder=\"Message\" onChange={(e) => setPost({ ...post, body: e.target.value })} />\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={() => { addToFirebase(); }}>Submit</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport Post from './Post';\nimport PostInput from './PostInput';\nimport './App.css';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    firebase.firestore().collection('posts').get().then((querySnapshot) => {\n      setPosts(querySnapshot.docs.map((doc) => doc.data()));\n    });\n\n    firebase.firestore().collection('posts').onSnapshot((querySnapshot) => {\n      setPosts(querySnapshot.docs.map((doc) => doc.data()));\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        {posts.map((post) => (\n          <Post\n            title={post.title}\n            body={post.body}\n            author={post.author}\n          />\n        ))}\n      </div>\n      <div className=\"input-cont\">\n        <PostInput />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}